version: "2.1"

volumes:
  data:

services:
  db:
    image: kartoza/postgis:14-3.1
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=postgres
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - .:/data:/database/var/lib/postgresql
  web:
    build: .
    container_name: web
    command:
      [
        "./scripts/bash/wait-for-it.sh",
        "db:5432",
        "--",
        "sh",
        "-c",
        "poetry run ./manage.py migrate && poetry run ./manage.py runserver 0.0.0.0:8000",
      ]
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - DJANGO_ENV=dev
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
  celery:
    build: .
    command: celery -A backend beat -l INFO
    volumes:
      - .:/code/celery
    environment:
      - DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - web
      - redis
  redis:
    image: "redis:alpine"
